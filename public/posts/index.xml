<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - MyBlog</title>
        <link>http://localhost:53955/lengoctuanblog/posts/</link>
        <description>All Posts | MyBlog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:53955/lengoctuanblog/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Chào mừng đến với blog của tôi</title>
    <link>http://localhost:53955/lengoctuanblog/chao-mung/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/chao-mung/</guid>
    <description><![CDATA[<h1 id="xin-chào">Xin chào</h1>
<p>Đây là blog của tôi chia sẻ kinh nghiệm về việc học java.</p>]]></description>
</item>
<item>
    <title>Async/Await trong JavaScript: Quản lý bất đồng bộ dễ dàng</title>
    <link>http://localhost:53955/lengoctuanblog/js-async-await/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/js-async-await/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>Async/Await là một cú pháp để viết mã bất đồng bộ trông giống như đồng bộ, dựa trên Promise.</p>
<h3 id="ví-dụ">Ví dụ</h3>

<pre><code class="language-javascript">async function fetchData() {
  try {
    const res = await fetch('https://api.example.com/data');
    const json = await res.json();
    return json;
  } catch (err) {
    console.error(err);
  }
}</code></pre>
<p>Sử dụng async/await giúp xử lý lỗi dễ dàng hơn so với chuỗi .then/.catch.</p>]]></description>
</item>
<item>
    <title>Giới thiệu về Hugo</title>
    <link>http://localhost:53955/lengoctuanblog/gioi-thieu-hugo/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/gioi-thieu-hugo/</guid>
    <description><![CDATA[<h1 id="hugo-là-gì">Hugo là gì?</h1>
<p>Hugo là một framework tạo website tĩnh nhanh, dễ sử dụng và rất phổ biến cho blog cá nhân.</p>
<p></p>
<p>Bạn có thể thêm hình ảnh vào bài viết bằng cú pháp Markdown như trên. Đảm bảo file ảnh đã được đặt đúng vị trí trong thư mục <code>static/images/</code>.</p>
<h2 id="tính-năng-nổi-bật">Tính năng nổi bật</h2>
<ul>
<li>Tốc độ build cực nhanh</li>
<li>Hỗ trợ Markdown</li>
<li>Dễ dàng mở rộng với theme và plugin</li>
</ul>
<p>Hãy thử tạo thêm nhiều bài viết với hình ảnh để blog của bạn sinh động hơn!</p>]]></description>
</item>
<item>
    <title>Hành trình học Java: Từ cơ bản đến ứng dụng thực tế</title>
    <link>http://localhost:53955/lengoctuanblog/hanh-trinh-hoc-java/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/hanh-trinh-hoc-java/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>Trong bài này, tôi chia sẻ hành trình học Java của mình: những bước khởi đầu, cột mốc quan trọng, và cách áp dụng vào các dự án thực tế.</p>
<h3 id="bắt-đầu">Bắt đầu</h3>
<ul>
<li>Lý do chọn Java: ứng dụng doanh nghiệp, nhiều tài liệu, cộng đồng lớn.</li>
<li>Tài nguyên ban đầu: sách Head First Java, tutorialspoint, Oracle docs.</li>
</ul>
<h3 id="cột-mốc-học-tập">Cột mốc học tập</h3>
<ul>
<li>Hiểu cú pháp cơ bản và OOP (1-2 tuần học cơ bản).</li>
<li>Làm project nhỏ: quản lý sách/khách sạn để hiểu luồng dữ liệu và cấu trúc.</li>
<li>Học công cụ: Maven/Gradle, Git, JUnit.</li>
</ul>
<h3 id="ứng-dụng-thực-tế">Ứng dụng thực tế</h3>
<ul>
<li>Dùng Spring Boot để xây dựng REST API.</li>
<li>Kết nối SQL Server và triển khai migration.</li>
</ul>
<h3 id="bài-học-rút-ra">Bài học rút ra</h3>
<ul>
<li>Thực hành &gt; đọc: code nhiều project nhỏ.</li>
<li>Học test và debug ngay từ đầu.</li>
</ul>
<p>Hy vọng hành trình này giúp bạn định hướng con đường học Java một cách rõ ràng và thiết thực.</p>]]></description>
</item>
<item>
    <title>Hướng dẫn sử dụng Hugo cho blog cá nhân</title>
    <link>http://localhost:53955/lengoctuanblog/huong-dan-hugo/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/huong-dan-hugo/</guid>
    <description><![CDATA[<h1 id="hướng-dẫn-sử-dụng-hugo">Hướng dẫn sử dụng Hugo</h1>
<p>Bài viết này giúp bạn bắt đầu với Hugo và cách tạo website tĩnh nhanh chóng.</p>
<h2 id="tại-sao-chọn-hugo">Tại sao chọn Hugo?</h2>
<ul>
<li>Build cực nhanh</li>
<li>Hỗ trợ Markdown</li>
<li>Dễ mở rộng với theme</li>
</ul>
<h2 id="hình-ảnh-minh-họa">Hình ảnh minh họa</h2>
<p></p>
<p>Bạn có thể thêm nhiều bài viết với cùng tag/category để kiểm tra tính năng taxonomy của Hugo.</p>]]></description>
</item>
<item>
    <title>Java cơ bản: Bắt đầu nhanh và cấu trúc dự án</title>
    <link>http://localhost:53955/lengoctuanblog/java-co-ban/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/java-co-ban/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>Java là một trong những ngôn ngữ lập trình phổ biến, mạnh mẽ và được sử dụng rộng rãi trong doanh nghiệp. Bài viết này hướng dẫn bạn từ việc cài đặt, cấu trúc dự án đến các khái niệm OOP cơ bản.</p>
<h3 id="1-cài-đặt">1. Cài đặt</h3>
<ul>
<li>Tải JDK (OpenJDK hoặc Oracle JDK) và thiết lập biến môi trường JAVA_HOME.</li>
<li>Dùng Maven hoặc Gradle để quản lý phụ thuộc.</li>
</ul>
<h3 id="2-cấu-trúc-dự-án-tham-khảo-maven">2. Cấu trúc dự án tham khảo (Maven)</h3>

<pre><code class="language-plaintext">my-app/
├─ src/main/java/com/example/app
│  └─ App.java
├─ src/test/java
└─ pom.xml</code></pre>
<h3 id="3-nguyên-tắc-oop-cơ-bản">3. Nguyên tắc OOP cơ bản</h3>
<ul>
<li>Lớp và đối tượng, kế thừa, đóng gói, đa hình, trừu tượng.</li>
<li>Ví dụ lớp đơn giản:</li>
</ul>

<pre><code class="language-java">public class Hello {
    public static void main(String[] args) {
        System.out.println("Hello, Java!");
    }
}</code></pre>
<h3 id="4-mẹo-thực-hành">4. Mẹo thực hành</h3>
<ul>
<li>Viết unit test sớm (JUnit / Mockito).</li>
<li>Sử dụng linter/formatter và tuân theo chuẩn đặt tên.</li>
</ul>
<h3 id="5-tài-nguyên-tham-khảo">5. Tài nguyên tham khảo</h3>
<ul>
<li>Oracle Java docs, Baeldung, StackOverflow.</li>
</ul>
<p>Kết luận: nắm vững cấu trúc và OOP sẽ giúp bạn tiến nhanh khi học các framework Java hiện đại.</p>]]></description>
</item>
<item>
    <title>Java Streams và Collections: Xử lý dữ liệu hiệu quả</title>
    <link>http://localhost:53955/lengoctuanblog/java-streams-collections/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/java-streams-collections/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>Trong Java 8 trở lên, Streams API cung cấp cách khai báo, nối chuỗi và xử lý tập hợp dữ liệu một cách dễ đọc và hiệu quả.</p>
<h3 id="ví-dụ-cơ-bản">Ví dụ cơ bản</h3>

<pre><code class="language-java">List<String> names = Arrays.asList("An", "Binh", "Cuong");
List<String> filtered = names.stream()
    .filter(s -> s.length() > 3)
    .map(String::toUpperCase)
    .collect(Collectors.toList());</code></pre>
<h3 id="tips-tối-ưu">Tips tối ưu</h3>
<ul>
<li>Tránh dùng stream trong vòng lặp nặng, cân nhắc song song (parallelStream) khi tập dữ liệu lớn.</li>
<li>Sử dụng Collector để gom nhóm, tính toán tổng hợp.</li>
</ul>
<p>Streams kết hợp Collections giúp code ngắn gọn, dễ hiểu và dễ maintain.</p>]]></description>
</item>
<item>
    <title>JavaScript ES6&#43;: Tổng quan các tính năng quan trọng</title>
    <link>http://localhost:53955/lengoctuanblog/js-es6-tong-quan/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/js-es6-tong-quan/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>ES6 (ECMAScript 2015) giới thiệu nhiều tính năng làm thay đổi cách viết JavaScript hiện đại: let/const, arrow functions, classes, template literals, destructuring, modules, và Promise.</p>
<h3 id="ví-dụ-arrow-function">Ví dụ arrow function</h3>

<pre><code class="language-javascript">const add = (a, b) => a + b;</code></pre>
<p>Các tính năng này giúp code rõ ràng, ngắn gọn và dễ maintain.</p>]]></description>
</item>
<item>
    <title>Khó khăn và kinh nghiệm khi học Java: Lời khuyên thực tế</title>
    <link>http://localhost:53955/lengoctuanblog/kho-khan-va-kinh-nghiem-hoc-java/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/kho-khan-va-kinh-nghiem-hoc-java/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>Học Java không tránh khỏi những khó khăn — tôi đã trải qua nhiều thử thách và muốn chia sẻ cách mình vượt qua.</p>
<h3 id="những-khó-khăn-thường-gặp">Những khó khăn thường gặp</h3>
<ul>
<li>Khó hiểu OOP lúc đầu: lớp, interface, inheritance.</li>
<li>Quản lý phụ thuộc và build tools: Maven/Gradle.</li>
<li>Debugging và stack trace dài với framework lớn.</li>
</ul>
<h3 id="kinh-nghiệm-giải-quyết">Kinh nghiệm giải quyết</h3>
<ul>
<li>Viết test nhỏ để cô lập vấn đề (JUnit).</li>
<li>Dùng debugger, log có cấu trúc (SLF4J/Logback).</li>
<li>Chia nhỏ vấn đề, đọc stack trace từ dưới lên.</li>
</ul>
<h3 id="thực-hành-đề-xuất">Thực hành đề xuất</h3>
<ul>
<li>Làm mini-project liên tục: CRUD app, xử lý dữ liệu, tích hợp API.</li>
<li>Đọc code của dự án mã nguồn mở để học patterns.</li>
</ul>
<p>Kết luận: kiên nhẫn, thực hành có hướng dẫn và học cách debug sẽ giúp bạn tiến bộ nhanh hơn.</p>]]></description>
</item>
<item>
    <title>React vs Vue: Lựa chọn framework frontend</title>
    <link>http://localhost:53955/lengoctuanblog/js-frameworks-react-vue/</link>
    <pubDate>Tue, 21 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>Le Ngoc Tuan</author>
    <guid>http://localhost:53955/lengoctuanblog/js-frameworks-react-vue/</guid>
    <description><![CDATA[<p style="text-align:center;margin-bottom:1rem;"></p>
<p>So sánh ngắn gọn giữa React và Vue: cả hai đều mạnh, nhưng khác nhau về triết lý, cộng đồng và cách tiếp cận.</p>
<h3 id="react">React</h3>
<ul>
<li>Thư viện UI với hệ sinh thái lớn, JSX, linh hoạt cho ứng dụng phức tạp.</li>
</ul>
<h3 id="vue">Vue</h3>
<ul>
<li>Dễ học hơn, templates rõ ràng, phù hợp cho dự án vừa và nhỏ.</li>
</ul>
<p>Lời khuyên: chọn theo yêu cầu dự án và đội ngũ.</p>]]></description>
</item>
</channel>
</rss>
