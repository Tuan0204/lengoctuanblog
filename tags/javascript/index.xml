<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on MyBlog</title><link>https://tuan0204.github.io/lengoctuanblog/tags/javascript/</link><description>Recent content in Javascript on MyBlog</description><generator>Hugo</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 22 Oct 2025 13:47:01 +0700</lastBuildDate><atom:link href="https://tuan0204.github.io/lengoctuanblog/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Async/Await trong JavaScript: Quản lý bất đồng bộ dễ dàng</title><link>https://tuan0204.github.io/lengoctuanblog/js-async-await/</link><pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate><guid>https://tuan0204.github.io/lengoctuanblog/js-async-await/</guid><description>&lt;p style="text-align:center;margin-bottom:1rem;"&gt;&lt;img src="https://images.unsplash.com/photo-1505238680356-667803448bb6?q=80&amp;w=1600&amp;auto=format&amp;fit=crop" alt="Async JavaScript" style="width:100%;max-width:1200px;height:auto;border-radius:8px;"/&gt;&lt;/p&gt;
&lt;p&gt;Async/Await là một cú pháp để viết mã bất đồng bộ trông giống như đồng bộ, dựa trên Promise.&lt;/p&gt;
&lt;h3 id="ví-dụ"&gt;Ví dụ&lt;/h3&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;async function fetchData() {
 try {
 const res = await fetch('https://api.example.com/data');
 const json = await res.json();
 return json;
 } catch (err) {
 console.error(err);
 }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sử dụng async/await giúp xử lý lỗi dễ dàng hơn so với chuỗi .then/.catch.&lt;/p&gt;</description></item><item><title>JavaScript ES6+: Tổng quan các tính năng quan trọng</title><link>https://tuan0204.github.io/lengoctuanblog/js-es6-tong-quan/</link><pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate><guid>https://tuan0204.github.io/lengoctuanblog/js-es6-tong-quan/</guid><description>&lt;p style="text-align:center;margin-bottom:1rem;"&gt;&lt;img src="https://images.unsplash.com/photo-1515879218367-8466d910aaa4?q=80&amp;w=1600&amp;auto=format&amp;fit=crop" alt="JavaScript ES6" style="width:100%;max-width:1200px;height:auto;border-radius:8px;"/&gt;&lt;/p&gt;
&lt;p&gt;ES6 (ECMAScript 2015) giới thiệu nhiều tính năng làm thay đổi cách viết JavaScript hiện đại: let/const, arrow functions, classes, template literals, destructuring, modules, và Promise.&lt;/p&gt;
&lt;h3 id="ví-dụ-arrow-function"&gt;Ví dụ arrow function&lt;/h3&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;const add = (a, b) =&gt; a + b;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Các tính năng này giúp code rõ ràng, ngắn gọn và dễ maintain.&lt;/p&gt;</description></item><item><title>React vs Vue: Lựa chọn framework frontend</title><link>https://tuan0204.github.io/lengoctuanblog/js-frameworks-react-vue/</link><pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate><guid>https://tuan0204.github.io/lengoctuanblog/js-frameworks-react-vue/</guid><description>&lt;p style="text-align:center;margin-bottom:1rem;"&gt;&lt;img src="https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&amp;w=1600&amp;auto=format&amp;fit=crop" alt="React vs Vue" style="width:100%;max-width:1200px;height:auto;border-radius:8px;"/&gt;&lt;/p&gt;
&lt;p&gt;So sánh ngắn gọn giữa React và Vue: cả hai đều mạnh, nhưng khác nhau về triết lý, cộng đồng và cách tiếp cận.&lt;/p&gt;
&lt;h3 id="react"&gt;React&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Thư viện UI với hệ sinh thái lớn, JSX, linh hoạt cho ứng dụng phức tạp.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vue"&gt;Vue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dễ học hơn, templates rõ ràng, phù hợp cho dự án vừa và nhỏ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lời khuyên: chọn theo yêu cầu dự án và đội ngũ.&lt;/p&gt;</description></item></channel></rss>