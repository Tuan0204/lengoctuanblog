<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on MyBlog</title>
    <link>http://localhost:1313/tags/javascript/</link>
    <description>Recent content in Javascript on MyBlog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 21 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Async/Await trong JavaScript: Quản lý bất đồng bộ dễ dàng</title>
      <link>http://localhost:1313/js-async-await/</link>
      <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/js-async-await/</guid>
      <description>&lt;p style=&#34;text-align:center;margin-bottom:1rem;&#34;&gt;&lt;img src=&#34;https://images.unsplash.com/photo-1505238680356-667803448bb6?q=80&amp;w=1600&amp;auto=format&amp;fit=crop&#34; alt=&#34;Async JavaScript&#34; style=&#34;width:100%;max-width:1200px;height:auto;border-radius:8px;&#34;/&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;Async/Await là một cú pháp để viết mã bất đồng bộ trông giống như đồng bộ, dựa trên Promise.&lt;/p&gt;&#xA;&lt;h3 id=&#34;ví-dụ&#34;&gt;Ví dụ&lt;/h3&gt;&#xA;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;async function fetchData() {&#xD;&#xA;  try {&#xD;&#xA;    const res = await fetch(&#39;https://api.example.com/data&#39;);&#xD;&#xA;    const json = await res.json();&#xD;&#xA;    return json;&#xD;&#xA;  } catch (err) {&#xD;&#xA;    console.error(err);&#xD;&#xA;  }&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;Sử dụng async/await giúp xử lý lỗi dễ dàng hơn so với chuỗi .then/.catch.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript ES6&#43;: Tổng quan các tính năng quan trọng</title>
      <link>http://localhost:1313/js-es6-tong-quan/</link>
      <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/js-es6-tong-quan/</guid>
      <description>&lt;p style=&#34;text-align:center;margin-bottom:1rem;&#34;&gt;&lt;img src=&#34;https://images.unsplash.com/photo-1515879218367-8466d910aaa4?q=80&amp;w=1600&amp;auto=format&amp;fit=crop&#34; alt=&#34;JavaScript ES6&#34; style=&#34;width:100%;max-width:1200px;height:auto;border-radius:8px;&#34;/&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;ES6 (ECMAScript 2015) giới thiệu nhiều tính năng làm thay đổi cách viết JavaScript hiện đại: let/const, arrow functions, classes, template literals, destructuring, modules, và Promise.&lt;/p&gt;&#xA;&lt;h3 id=&#34;ví-dụ-arrow-function&#34;&gt;Ví dụ arrow function&lt;/h3&gt;&#xA;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const add = (a, b) =&gt; a + b;&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;Các tính năng này giúp code rõ ràng, ngắn gọn và dễ maintain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>React vs Vue: Lựa chọn framework frontend</title>
      <link>http://localhost:1313/js-frameworks-react-vue/</link>
      <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/js-frameworks-react-vue/</guid>
      <description>&lt;p style=&#34;text-align:center;margin-bottom:1rem;&#34;&gt;&lt;img src=&#34;https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&amp;w=1600&amp;auto=format&amp;fit=crop&#34; alt=&#34;React vs Vue&#34; style=&#34;width:100%;max-width:1200px;height:auto;border-radius:8px;&#34;/&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;So sánh ngắn gọn giữa React và Vue: cả hai đều mạnh, nhưng khác nhau về triết lý, cộng đồng và cách tiếp cận.&lt;/p&gt;&#xA;&lt;h3 id=&#34;react&#34;&gt;React&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Thư viện UI với hệ sinh thái lớn, JSX, linh hoạt cho ứng dụng phức tạp.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;vue&#34;&gt;Vue&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dễ học hơn, templates rõ ràng, phù hợp cho dự án vừa và nhỏ.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Lời khuyên: chọn theo yêu cầu dự án và đội ngũ.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
